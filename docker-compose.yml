version: '3.8'

services:
  celery_project_db:
    image: postgres:16
    container_name: celery_project_db
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: on-failure
    env_file:
      - .env
    ports:
      - "6379:6379"

  back_server:
    build:
      context: .
      dockerfile: Dockerfile
    image: back_server
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - celery_project_db

  celery:
    image: back_server
    command: celery -A celery_task worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - celery_project_db
      - redis
      - back_server

  task_worker:
    image: back_server
    ports:
      - "8001:8000"
    entrypoint: sh -c "python schedule_worker.py"
    env_file:
      - .env
    volumes:
      - .:/app
    restart: unless-stopped
    depends_on:
      - celery_project_db
      - back_server

  nginx:
    build:
      context: .
      dockerfile: ./deploy/nginx/Dockerfile.nginx
    command: nginx -g 'daemon off;'
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/src/server/static/
      - media_volume:/app/src/server/media/
    depends_on:
      - back_server

volumes:
  postgres_data:
  static_volume:
  media_volume:
